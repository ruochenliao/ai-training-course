version: '3.8'

services:
  # 数据库服务
  postgres:
    image: postgres:15-alpine
    container_name: rbac-postgres
    environment:
      POSTGRES_DB: rbac_db
      POSTGRES_USER: rbac_user
      POSTGRES_PASSWORD: rbac_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - rbac-network
    restart: unless-stopped

  # Redis服务（用于缓存和会话）
  redis:
    image: redis:7-alpine
    container_name: rbac-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rbac-network
    restart: unless-stopped

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rbac-backend
    environment:
      - DATABASE_URL=postgresql://rbac_user:rbac_password@postgres:5432/rbac_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-here
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - rbac-network
    restart: unless-stopped
    volumes:
      - ./backend/logs:/app/logs

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rbac-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - rbac-network
    restart: unless-stopped

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: rbac-nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - rbac-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  rbac-network:
    driver: bridge
